---
include:
  - docassemble.AssemblyLine:al_package.yml
  - docassemble.ALMassachusetts:al_massachusetts.yml
  - docassemble.MassAccess:massaccess.yml
---
metadata:
  title: |
    Child Support Guidelines Worksheet
  short title: |
    Child Support Guidelines Worksheet
  authors:
    - Hayden McGuire
---
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["child_support_guidelines_worksheet"]
data:
  al_weaver_version: "1.6.3"
  generated on: "2022-06-27"
  title: >-
    Child Support Guidelines Worksheet
  short title: >-
    Child Support Guidelines Worksheet
  description: |-
    Form that assists a litigant in determining what child support payements will be.
  original_form: >-
    https://courtforms.jud.state.ma.us/publicforms/PFC0001_2021
  allowed courts: []
  categories: []
  typical role: "unknown"
  generate download screen: True
---
code: |
  interview_metadata['main_interview_key'] =  'child_support_guidelines_worksheet'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-ChildSupportGuidelinesWorksheet'
---
code: |
  interview_short_title = "Determining Child Support Payments"
---
code: |
  al_form_type = "other" 
---
objects:
  - users: ALPeopleList.using(there_are_any=False)
  - preparer: ALPeopleList.using(ask_number=True,target_number=1)
---
sections:
  - review_child_support_guidelines_worksheet: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_child_support_guidelines_worksheet
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["child_support_guidelines_worksheet"]["allowed courts"]
  nav.set_section('review_child_support_guidelines_worksheet')
  # Below sets the user_role by asking a question.
  # You can set user_role directly instead to either 'plaintiff' or 'defendant'
  # user_ask_role
  prepared_date
  case_name
  children_number
  set_parenting_arrangement
  set_progress(14)
  set_children_over_18_number
  set_parents1_children
  set_parents2_children
  parents1_under_18_number
  parents1_name_full
  parents1_gross_amount
  parents1_SS_dependency_amount
  set_parents1_ss_benefits_zero
  adjust_parents1_gross_amount
  parents2_gross_amount
  set_parents2_ss_benefits_zero
  adjust_parents2_gross_amount
  set_progress(28)
  parents1_other_obligations_amount
  parents2_other_obligations_amount
  parents1_child2_amount
  set_progress(42)
  parents2_child1_amount
  set_default_children_amounts
  set_progress(57)
  calculate_parents2_available_income_amount
  calculate_parents1_available_income_amount
  calculate_combined_available_income_amount
  calculate_applicable_income_amount 
  calculate_one_child_support_amount
  calculate_parents1_income_share_percent
  calculate_parents2_income_share_percent
  calculate_parents1_other_low_income_adjusted
  calculate_parents2_other_low_income_adjusted
  calculate_parents2_child_number_adjustments
  calculate_parents1_child_number_adjustments
  calculate_parents1_children_adjustments
  calculate_parents2_children_adjustments
  calculate_parents1_other_limited_adjusted_amount
  calculate_parents2_other_limited_adjusted_amount
  set_parents1_income_support_percent
  set_parents2_income_support_percent
  set_parents1_share_support_percent
  set_parents2_share_support_amount
  set_parents1_other_share_support
  set_parents2_other_share_support
  set_recipient_payor_statuses
  set_combined_additional_income_amount 
  parents1_benchmark_amount
  parents2_benchmark_amount
  set_recipients_support_income_percent
  set_payors_disparity_adjusted_amount
  mass_gov_yes
  set_payors_SS_credit_amount
  set_payors_obligations_amount
  set_payors_support_income_percent_amount
  interview_order_child_support_guidelines_worksheet = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  child_support_guidelines_worksheet_intro
  interview_order_child_support_guidelines_worksheet
  #signature_date    
  #Save anonymized interview statistics (customize the saved data below)
  #store_variables_snapshot(data={'zip': users[0].address.zip})    
  child_support_guidelines_worksheet_preview_question
  #basic_questions_signature_flow    
  child_support_guidelines_worksheet_download
---
comment: |
  This question is used to introduce your interview. Please customize
id: Child_Support_Guidelines_Worksheet
continue button field: child_support_guidelines_worksheet_intro
question: |
  Child Support Worksheet
subquestion: |
  This guided interview will help you complete the [Child Support Worksheet](https://courtforms.jud.state.ma.us/publicforms/PFC0001_2021) and determine how much child support will be owed. 
  
  To complete the interview you need to have income and expense information for **both parents**. Use the other parent’s Financial Statement if you have it. If you do not know the other parent’s information, put in what you think it is.  
  
  This interview is intended to make the [Child Support Worksheet](https://courtforms.jud.state.ma.us/publicforms/PFC0001_2021) a simpler and less time consuming process to complete. It is based on the [Massachusetts Child Support Guidlines for 2021](https://www.mass.gov/doc/2021-child-support-guidelines/download).
---
id: Preparer information
question: |
  Please give the full name of who is filling out this worksheet, and what todays date is.
fields:
  - "Who is filling out this worksheet?": preparer_name_full
    maxlength: 28
    hint: |
      e.g. Jane Doe
  - "What date is this worksheet being prepared on?": prepared_date
    datatype: date
    default: |
       ${ today() }
---
id: Case Information
question: |
  What is the case name and the docket number? 
fields:
  - "What is the name of the case?": case_name
    maxlength: 29
    hint: |
      e.g. Jane Doe v. John Smith
  - "Please provide the docket number for the case.": docket_number
    maxlength: 29
    hint: |
      e.g. SU15D004CS
    help: |
      The docket number should be a 11 digit string of numbers and letters. Write "Unknown" if unknown.
---
id: Children ages
question: |
  What are the ages of the children for this order?
fields:
  - "Number of children who may be eligible to be covered by this order.": children_number    
    datatype: number    
    help: Input what you think the total number of children that are eligible for support payments under this order.
  - "Are any of the children covered by this order are between 18 and 23 years old?": any_children_over_18
    datatype: yesnoradio
  - "How many of the children are between 18 and 23 years old?": children_over_18_number
    datatype: number
    show if: any_children_over_18
---
# sets over_18 values if none
depends on:
  - any_children_over_18 
code: |
  if any_children_over_18 == False:
    children_over_18_number = 0
    parents1_over_18_number = 0
    parents2_over_18_number = 0
  set_children_over_18_number = True
---
id: Parenting arrangement
question: |
  What parenting arrangement below is most similar to yours?
fields:
  - Choose one: parenting_arrangement
    input type: radio
    choices:
      - Parenting time and financial responsibilities are **shared** mostly equally.: shared      
      - All of the children live with one parent about **two-thirds** of the time.: two-thirds
      - The children are **split** between the parents. Each parent has primary custody of at least one child.: split      
  - "What is the name of the parent that has the children approximately **two-thirds** of the time?": parents1_name_full
    show if: 
      variable: parenting_arrangement
      is: two-thirds
  - "What is the name of the other parent in this order?": parents2_name_full
    show if: 
      variable: parenting_arrangement
      is: two-thirds
---
id: sets parenting_arrangement
depends on:
  - parenting_arrangement
code: |
  if parenting_arrangement == 'shared':
    shared_equal_yes = True
    two_thirds_yes = False
    split_children_yes = False
  elif parenting_arrangement == 'two-thirds':
    shared_equal_yes = False
    two_thirds_yes = True
    split_children_yes = False
  elif parenting_arrangement == 'split':
    shared_equal_yes = False
    two_thirds_yes = False
    split_children_yes = True
  set_parenting_arrangement = True 
---
id: parents names?
question: |
  What are the names of the parents involved in this order?   
fields:    
  - "What is one of the parent's name?": parents1_name_full
    maxlength: 29
  - "What is the other parent's name?": parents2_name_full
    maxlength: 29 
---
# sets parents2 children values
depends on:
  - parenting_arrangement
code: |
  if parenting_arrangement == "two-thirds":
    parents2_under_18_number = 0
    parents2_over_18_number = 0
  elif parenting_arrangement == "shared":
    parents2_under_18_number = children_number - children_over_18_number
    parents2_over_18_number = children_over_18_number
  set_parents2_children = True
---
# sets parents1 children values 
depends on:
  - parenting_arrangement
  - children_number
  - children_over_18_number
code: |
  if parenting_arrangement == "two-thirds":
    parents1_under_18_number = children_number - children_over_18_number   
    parents1_over_18_number = children_over_18_number
  elif parenting_arrangement == "shared":
    parents1_under_18_number = children_number - children_over_18_number   
    parents1_over_18_number = children_over_18_number
  set_parents1_children = True
---
id: Child domicile assigning
question: |
  How many children live with each parent?
subquestion: |   
  Since the parenting arangment is **split**, meaning some children live with each parent, put the number of children living with each parent in the respective fields. 
fields:
  - "How many of the children that live with ${ parents1_name_full } are **under 18 years old**?": parents1_under_18_number
    datatype: number    
  - "How many of the children that live with ${ parents2_name_full } are **under 18 years old**?": parents2_under_18_number
    datatype: number
  - "How many of children that live with ${ parents1_name_full } are **over 18 years old**?": parents1_over_18_number
    datatype: number
    show if:
      code: |
        any_children_over_18 == True
  - "How many of children that live with ${ parents2_name_full } are **over 18 years old**?": parents2_over_18_number
    datatype: number
    show if: 
      code: |
        any_children_over_18 == True
---
id: parents1 gross income info
question: |
  What does ${ parents1_name_full }'s weekly income situation look like?
fields:
  - "What is ${ parents1_name_full }'s gross **weekly** income?": parents1_gross_amount
    datatype: currency
    min: 0
    help: |
      "Gross Weekly Income" is your income before taxes and deductions are taken out. It does not include public assistance like welfare, TAFDC, SSI, and Food Stamps SNAP. If you get a Social Security dependency benefit for your child, do not include that benefit in this field, you will be asked for it soon.
  - "Does the gross income amount include public assistance like TAFDC/Welfare, SSI, and Food Stamps/SNAP?": parents1_gross_include_public_assistance
    datatype: yesnoradio
    help: "The number giving you Gross Income from the Finacial Statement includes these numbers."
  - "How much in {TAFDC/Welfare} does ${ parents1_name_full } recieve?": parents1_tafdc_amount
    datatype: number
    show if: parents1_gross_include_public_assistance
    help: "This is a cash benefits program."
    default: 0
  - "How much {SSI} does ${ parents1_name_full } recieve?": parents1_ssi_amount
    datatype: number
    show if: parents1_gross_include_public_assistance
    help: "Supplemental Security Income (SSI) is a means tested suplamental income program."
    default: 0
  - "How much in {Food Stamps/SNAP} does ${ parents1_name_full } recieve?": parents1_food_stamps_amount
    datatype: number
    show if: parents1_gross_include_public_assistance
    help: "Food Stamps"
    default: 0
terms:
  TAFDC/Welfare: |
    TAFDC and Welfare are the same thing. Transitional Assistance to Families with Dependent Children (TAFDC) is a means tested cash benefits program for families who have dependent children.
  SSI: |
    Supplamental Security Income (SSI) is a means tested program for disabled children, disabled adults, and individuals aged 65 or older.
  Food Stamps/SNAP: |
    Food Stamps is now called SNAP. It is a means tested food voucher program run by the state government. Qualifying people get monthly money for food purchases sent to a EBT card.
---
#parents1 public assistance adjustment to gross weekly income
depends:
  - parents1_gross_include_public_assistance
code: |
  if parents1_gross_include_public_assistance == True:
    parents1_gross_amount = parents1_gross_amount - parents1_ssi_amount - parents1_food_stamps_amount - parents1_tafdc_amount
  else:
    parents1_gross_amount = parents1_gross_amount
  adjust_parents1_gross_amount = True
---
id: parents1 social security info
question: |
  Does ${ parents1_name_full } recieve any dependecy benefits as a part of their Social Security income?
fields:
  - "Does ${ parents1_name_full } recieve any **Social Security Dependency** benfits?": parents1_ss_yes
    datatype: yesnoradio
    help: "Social Security Dependency benefits is the amount you recieve becuase of a dependant you have, this is distinct from what you might be recieving for yourself."
  - "What is ${ parents1_name_full }'s Social Security Dependency benefit?": parents1_SS_dependency_amount
    datatype: currency
    min: 0
    help: |
      This will be info on what numbers to give.  
    show if: parents1_ss_yes
  - "How much of ${ parents1_name_full }'s Social Security Dependency benefit is sent directly to them?": parents1_SS_dependency_recievied_amount   
    datatype: currency
    min: 0
    help: |
      This will be info on what numbers to give.  
    show if: parents1_ss_yes
---
#sets SS benfits to 0 if they do not recieve them. 
depends on:
  - parents1_ss_yes
code: |
  if parents1_ss_yes == False:
    parents1_SS_dependency_amount = 0
    parents1_SS_dependency_recievied_amount = 0
  set_parents1_ss_benefits_zero = True 
---
id: parents2 gross income
question: |
  What does ${ parents2_name_full }'s income situation look like?
fields:
  - "What is ${ parents2_name_full }'s gross **weekly** income?": parents2_gross_amount
    datatype: currency
    help: |
      "Gross Weekly Income" is your income before taxes and deductions are taken out. It does not include public assistance like welfare, TAFDC, SSI, and Food Stamps SNAP. If you get a Social Security dependency benefit for your child, do not include that benefit in this field, you will be asked for it soon.
    min: 0
  - "Does the gross income amount include public assistance like TAFDC/Welfare, SSI, and Food Stamps/SNAP?": parents2_gross_include_public_assistance
    datatype: yesnoradio
    help: "The number giving you Gross Income from the Finacial Statement includes these numbers."
  - "How much in TAFDC/Welfare does ${ parents2_name_full } recieve?": parents2_tafdc_amount
    datatype: number
    show if: parents2_gross_include_public_assistance
    help: "This is a cash benefits program"
    default: 0
  - "How much SSI does ${ parents2_name_full } recieve?": parents2_ssi_amount
    datatype: number
    show if: parents2_gross_include_public_assistance
    help: "Supplemental Security Income (SSI) is a means tested suplamental income program."
    default: 0
  - "How much in Food Stamps does ${ parents2_name_full } recieve?": parents2_food_stamps_amount
    datatype: number
    show if: parents2_gross_include_public_assistance
    help: "Food Stamps"
    default: 0    
---
#parents2 public assistance adjustment to gross weekly income
depends:
  - parents2_gross_include_public_assistance
code: |
  if parents2_gross_include_public_assistance == True:
    parents2_gross_amount = parents2_gross_amount - parents2_ssi_amount - parents2_food_stamps_amount - parents2_tafdc_amount
  else:
    parents2_gross_amount = parents2_gross_amount
  adjust_parents2_gross_amount = True
---
id: parents2 social security
question: |
  Does ${ parents2_name_full } recieve any dependecy benefits as a part of their Social Security income?
fields:
  - "Does ${ parents2_name_full } recieve any Social Security Dependency benfits?": parents2_ss_yes
    datatype: yesnoradio
  - "How much is ${ parents2_name_full } Social Security Dependency benefit?": parents2_SS_dependency_amount   
    datatype: currency
    min: 0
    help: |
      This will be info on what numbers to give.      
    show if: parents2_ss_yes
  - "How much of ${ parents2_name_full }'s Social Security Dependency benefit is sent directly to them?": parents2_SS_dependency_recievied_amount
    datatype: currency
    min: 0
    help: |
      This will be info on what numbers to give. 
    show if: parents2_ss_yes
---
#sets SS benfits to 0 if they do not recieve them. 
depends on:
  - parents2_ss_yes
code: |
  if parents2_ss_yes == False:
    parents2_SS_dependency_amount = 0
    parents2_SS_dependency_recievied_amount = 0
  set_parents2_ss_benefits_zero = True 
---
id: parents1 health and other expenses
question: |
  How much does ${ parents1_name_full } pay for health and other expenses?
fields:  
  - "Put the weekly amount that ${ parents1_name_full } actually pays for individual or family health care coverage?": parents1_health_care_amount
    datatype: currency
    min: 0
    help: |
     In this field, put the cost of individual or family health care coverage. Put the weekly amount each parent actually pays for individual or family health care coverage.
  - "Put the weekly amount ${ parents1_name_full } actually pays for dental and/or vision insurance **for the children**.": parents1_dental_vision_amount
    datatype: currency
    min: 0
    help : |
      In this field, put the cost of dental and vision insurance for the children. Put the weekly amount each parent actually pays for dental and vision insurance. **Unlike health care coverage this number is limited to what is actually paid for the child**.
  - "Put the weekly amount ${ parents1_name_full } pays in existing court-ordered or voluntary payments each parent makes for a child, spouse, or former spouse not involved on this case.:": parents1_other_obligations_amount
    datatype: currency
    min: 0 
    help: |
      In this field, put existing court-ordered or voluntary payments each parent makes for a child, spouse, or former spouse not involved on this case.
---
id: parents2 health and other expenses
question: |
  How much does ${ parents2_name_full } pay for health, dental, and vision insurance, as well as any child support payements already being made?
fields:
  - "Put the weekly amount that ${ parents2_name_full } actually pays for individual or family health care coverage.": parents2_health_care_amount
    datatype: currency
    min: 0
    help: |
     In this field, put the cost of individual or family health care coverage. Put the weekly amount each parent actually pays for individual or family health insurance coverage.
  - "Put the weekly amount ${ parents2_name_full } actually pays for dental and/or vision insurance **for the children**.": parents2_dental_vision_amount
    datatype: currency
    min: 0
    help : |
      In this field, put the cost of dental and vision insurance for the children. Put the weekly amount each parent actually pays for dental and vision insurance. **Unlike health care coverage this number is limited to what is actually paid for the child**.
  - "Put the weekly amount ${ parents2_name_full } pays in existing court-ordered or voluntary payments each parent makes for a child, spouse, or former spouse not involved on this case.": parents2_other_obligations_amount
    datatype: currency
    min: 0
    help: |
      In this field, put existing court-ordered or voluntary payments each parent makes for a child, spouse, or former spouse not involved on this case.
---
id: parents1 work expenses for each child
question: |
   Does ${ parents1_name_full } pay for child care costs for work-related reasons?
fields:
  - "Does ${ parents1_name_full } pay any child care costs to enable them to go to work or to training for work?": parents1_child_care_yesno
    datatype: yesnoradio
  - note: "Put the weekly amount ${ parents1_name_full } actually pays for work-related child care or child care so they can get work-related training and education. The limit for each child covered by the order is $355 per week."
    show if: parents1_child_care_yesno
  - "What are the work-related child care expenses for Child 1?": parents1_child1_amount
    datatype: currency
    min: 0
    max: 355
    show if: 
      variable: parents1_child_care_yesno
      is: True
      code: |
        children_number >= 1 
  - "What are the work-related child care expenses for Child 2?": parents1_child2_amount
    datatype: currency
    min: 0
    max: 355
    show if:
      variable: parents1_child_care_yesno
      is: True
      code: |
        children_number >= 2
  - "What are the work-related child care expenses for Child 3?": parents1_child3_amount
    datatype: currency
    min: 0
    max: 355
    show if:
      variable: parents1_child_care_yesno
      is: True
      code: |
        children_number >= 3
  - "What are the work-related child care expenses for Child 4?": parents1_child4_amount
    datatype: currency
    min: 0
    max: 355
    show if:
      variable: parents1_child_care_yesno
      is: True
      code: |
        children_number >= 4
  - "What are the work-related child care expenses for Child 5?": parents1_child5_amount
    datatype: currency
    min: 0
    max: 355
    show if:
      variable: parents1_child_care_yesno
      is: True
      code: |
        children_number >= 5
---
id: parents2 work expenses for each child
question: |
  How much does ${ parents2_name_full } pay for each child for work-related child care expenses?
fields:
  - "Does ${ parents2_name_full } pay any child care costs to enable them to go to work or to training for work?": parents2_child_care_yesno
    datatype: yesnoradio 
  - note: "Put the weekly amount ${ parents2_name_full } actually pays for work-related child care or child care so they can get work-related training and education. The limit for each child covered by the order is $355 per week."
    show if: parents2_child_care_yesno
  - "What are the work-related child care expenses for Child 1": parents2_child1_amount
    datatype: currency
    min: 0
    max: 355
    show if:
      variable: parents2_child_care_yesno
      is: True
      code: |
        children_number >= 1
  - "What are the work-related child care expenses for Child 2?": parents2_child2_amount
    datatype: currency
    min: 0
    max: 355
    show if:
      variable: parents2_child_care_yesno
      is: True
      code: |
        children_number >= 2
  - "What are the work-related child care expenses for Child 3?": parents2_child3_amount
    datatype: currency
    min: 0
    max: 355
    show if:
      variable: parents2_child_care_yesno
      is: True
      code: |
        children_number >= 3
  - "What are the work-related child care expenses for Child 4?": parents2_child4_amount
    datatype: currency
    min: 0
    max: 355
    show if:
      variable: parents2_child_care_yesno
      is: True
      code: |
        children_number >= 4
  - "What are the work-related child care expenses for Child 5?": parents2_child5_amount
    datatype: currency
    min: 0
    max: 355
    show if:
      variable: parents2_child_care_yesno
      is: True
      code: |
        children_number >= 5
---
code: |
  if children_number == 1:
    parents1_child2_amount = 0
    parents1_child3_amount = 0
    parents1_child4_amount = 0
    parents1_child5_amount = 0
    parents2_child2_amount = 0
    parents2_child3_amount = 0
    parents2_child4_amount = 0
    parents2_child5_amount = 0
  elif children_number == 2:
    parents1_child3_amount = 0
    parents1_child4_amount = 0
    parents1_child5_amount = 0
    parents2_child3_amount = 0
    parents2_child4_amount = 0
    parents2_child5_amount = 0
  elif children_number == 3:
    parents1_child4_amount = 0
    parents1_child5_amount = 0
    parents2_child4_amount = 0
    parents2_child5_amount = 0
  elif children_number == 4:
    parents1_child5_amount = 0
    parents2_child5_amount = 0
  set_default_children_amounts = True
---
id: preview child_support_guidelines_worksheet
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_recipient_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_child_support_guidelines_worksheet'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: child_support_guidelines_worksheet_preview_question    
---
code: |
  mass_gov_yes = True
---
id: child support guidelines worksheet review screen
event: review_child_support_guidelines_worksheet
question: |
  Review your answers
review:
  - Edit: case_name
    button: |
      **What is the name of the case?**:
      ${ case_name }
  - Edit: prepared_date
    button: |
      **What date is this worksheet being prepared on?**:
      ${ prepared_date }
  - Edit: children_number
    button: |
      **What is the total number of children that might be eligible for support payements?**:
      ${ children_number }
  - Edit: shared_equal_yes
    button: |
      **Are financial responsibilities and parenting times split equally?**:
      ${ word(yesno(shared_equal_yes)) }
  - Edit: two_thirds_yes
    button: |
      **Do the children reside with one parent two-thirds of the time?**:
      ${ word(yesno(two_thirds_yes)) }
  - Edit: split_children_yes
    button: |
      **Does each parent provide a primary residence for at least one child?**:
      ${ word(yesno(split_children_yes)) }
  - Edit: parents1_under_18_number
    button: |
      **How many of Parents1 children are under 18 years old?**:
      ${ parents1_under_18_number }
  - Edit: parents2_under_18_number
    button: |
      **How many of Parents2 children are under 18 years old?**:
      ${ parents2_under_18_number }
  - Edit: parents1_over_18_number
    button: |
      **How many of Parents1 children are over 18 years old?**:
      ${ parents1_over_18_number }
  - Edit: parents2_over_18_number
    button: |
      **How many of Parents2 children are over 18 years old?**:
      ${ parents2_over_18_number }
  - Edit: parents1_total_children_number
    button: |
      **Total number of children for Parents1:**:
      ${ parents1_total_children_number }
  - Edit: parents2_total_children_number
    button: |
      **Total number of children for Parents2:**:
      ${ parents2_total_children_number }
  - Edit: parents1_gross_amount
    button: |
      **What is Parents1 gross weekly income?**:
      ${ currency(parents1_gross_amount) }
  - Edit: parents2_gross_amount
    button: |
      **What is Parents2 gross weekly income?**:
      ${ currency(parents2_gross_amount) }
  - Edit: parents1_SS_dependency_amount
    button: |
      **How much is Parents1 Social Security benefit?**:
      ${ currency(parents1_SS_dependency_amount) }
  - Edit: parents2_SS_dependency_amount
    button: |
      **How much is Parents2 Social Security benefit?**:
      ${ currency(parents2_SS_dependency_amount) }
  - Edit: parents2_SS_dependency_recievied_amount
    button: |
      **How much of Parents2 SS benefit is sent directly to them?**:
      ${ currency(parents2_SS_dependency_recievied_amount) }
  - Edit: parents1_SS_dependency_recievied_amount
    button: |
      **How much of Parents1 SS benefit is sent directly to them?**:
      ${ currency(parents1_SS_dependency_recievied_amount) }
  - Edit: parents1_other_obligations_amount
    button: |
      **How much does Parents1 pay in support for other obligations:**:
      ${ currency(parents1_other_obligations_amount) }
  - Edit: parents2_other_obligations_amount
    button: |
      **How much does Parents2 pay in support for other obligations:**:
      ${ currency(parents2_other_obligations_amount) }
  - Edit: parents1_health_care_amount
    button: |
      **How much does Parents1 pay for health insurance enrollment?**:
      ${ currency(parents1_health_care_amount) }
  - Edit: parents2_health_care_amount
    button: |
      **How much does Parents2 pay for health insurance enrollment?**:
      ${ currency(parents2_health_care_amount) }
  - Edit: parents1_dental_vision_amount
    button: |
      **How much does Parents1 pay for dental and vision insurance?**:
      ${ currency(parents1_dental_vision_amount) }
  - Edit: parents2_dental_vision_amount
    button: |
      **How much does Parents2 pay for dental and vision insurance?**:
      ${ currency(parents2_dental_vision_amount) }
  - Edit: parents1_child2_amount
    button: |
      **Parents1 What are the child care costs for Child 2 paid by this order?**:
      ${ currency(parents1_child2_amount) }
  - Edit: parents1_child5_amount
    button: |
      **Parents1 What are the child care costs for Child 5 paid by this order?**:
      ${ currency(parents1_child5_amount) }
  - Edit: parents1_child1_amount
    button: |
      **Parents1 What are the child care costs for Child 1 paid by this order?**:
      ${ currency(parents1_child1_amount) }
  - Edit: parents1_child3_amount
    button: |
      **Parents1 What are the child care costs for Child 3 paid by this order?**:
      ${ currency(parents1_child3_amount) }
  - Edit: parents1_child4_amount
    button: |
      **Parents1 What are the child care costs for Child 4 paid by this order?**:
      ${ currency(parents1_child4_amount) }
  - Edit: parents1_all_children_amount
    button: |
      **What are the child care costs of all children for Parents1?**:
      ${ parents1_all_children_amount }
  - Edit: parents2_all_children_amount
    button: |
      **What are the child care costs of all children for Parents2?**:
      ${ parents2_all_children_amount }
  - Edit: parents2_child1_amount
    button: |
      **Parents2 What are the child care costs for Child 1 paid by this order?**:
      ${ currency(parents2_child1_amount) }
  - Edit: parents2_child2_amount
    button: |
      **Parents2 What are the child care costs for Child 2 paid by this order?**:
      ${ currency(parents2_child2_amount) }
  - Edit: parents2_child3_amount
    button: |
      **Parents2 What are the child care costs for Child 3 paid by this order?**:
      ${ currency(parents2_child3_amount) }
  - Edit: parents2_child4_amount
    button: |
      **Parents2 What are the child care costs for Child 4 paid by this order?**:
      ${ currency(parents2_child4_amount) }
  - Edit: parents2_child5_amount
    button: |
      **Parents2 What are the child care costs for Child 5 paid by this order?**:
      ${ currency(parents2_child5_amount) }
  - Edit: child2_total_amount
    button: |
      **Child2 total amount**:
      ${ child2_total_amount }
  - Edit: child3_total_amount
    button: |
      **Child3 total amount**:
      ${ child3_total_amount }
  - Edit: child4_total_amount
    button: |
      **Child4 total amount**:
      ${ child4_total_amount }
  - Edit: child5_total_amount
    button: |
      **Child5 total amount**:
      ${ child5_total_amount }
  - Edit: child1_total_amount
    button: |
      **Child1 total amount**:
      ${ child1_total_amount }
  - Edit: parents2_available_income_amount
    button: |
      **Parents2 income available amount**:
      ${ parents2_available_income_amount }
  - Edit: parents1_available_income_amount
    button: |
      **Parents1 income available amount**:
      ${ parents1_available_income_amount }
  - Edit: combined_available_income_amount
    button: |
      **Total available income amount (both parents)**:
      ${ combined_available_income_amount }
  - Edit: parents2_income_share_percent
    button: |
      **Parents2 income share percent**:
      ${ parents2_income_share_percent }
  - Edit: parents1_income_share_percent
    button: |
      **Parents1 income share percent**:
      ${ parents1_income_share_percent }
  - Edit: applicable_income_amount
    button: |
      **Applicable income amount**:
      ${ applicable_income_amount }
  - Edit: one_child_support_amount
    button: |
      **One child support amount**:
      ${ one_child_support_amount }
  - Edit: parents2_child_number_adjustments
    button: |
      **Parents2 adjustments**:
      ${ parents2_child_number_adjustments }
  - Edit: parents1_child_number_adjustments
    button: |
      **Parents1 adjustments**:
      ${ parents1_child_number_adjustments }
  - Edit: parents2_support_amount
    button: |
      **Parents2 support amount**:
      ${ parents2_support_amount }
  - Edit: parents1_support_amount
    button: |
      **Parents1 support amount**:
      ${ parents1_support_amount }
  - Edit: parents1_children_adjustments
    button: |
      **Parents1 children adjustments**:
      ${ parents1_children_adjustments }
  - Edit: parents2_children_adjustments
    button: |
      **Parents2 children adjustments**:
      ${ parents2_children_adjustments }
  - Edit: parents1_over_18_adjustments_amount
    button: |
      **Parents1 over 18 adjustments amount**:
      ${ parents1_over_18_adjustments_amount }
  - Edit: parents2_over_18_adjustments_amount
    button: |
      **Parents2 over 18 adjustments amount**:
      ${ parents2_over_18_adjustments_amount }
  - Edit: parents1_adjusted_support_amount
    button: |
      **Parents1 adjusted support amount**:
      ${ parents1_adjusted_support_amount }
  - Edit: parents2_adjusted_support_amount
    button: |
      **Parents2 adjusted support amount**:
      ${ parents2_adjusted_support_amount }
  - Edit: parents1_share_support_amount
    button: |
      **Parents1 share support amount**:
      ${ currency(parents1_share_support_amount) }
  - Edit: parents2_share_support_amount
    button: |
      **Parents2 share support amount**:
      ${ parents2_share_support_amount }
  - Edit: parents1_other_low_income_adjusted
    button: |
      **Parents2 low income adjustment amount**:
      ${ parents1_other_low_income_adjusted }
  - Edit: parents2_other_low_income_adjusted
    button: |
      **Parents1 low income adjustment amount**:
      ${ parents2_other_low_income_adjusted }
  - Edit: parents2_benchmark_amount
    button: |
      **Parents2 benchmark amount**:
      ${ parents2_benchmark_amount }
  - Edit: parents1_benchmark_amount
    button: |
      **Parents1 benchmark amount**:
      ${ parents1_benchmark_amount }
  - Edit: parents1_other_benchmark_share_amount
    button: |
      **Parents2 benchmark share amount**:
      ${ parents1_other_benchmark_share_amount }
  - Edit: parents2_other_benchmark_share_amount
    button: |
      **Parents1 benchmark share amount**:
      ${ parents2_other_benchmark_share_amount }
  - Edit: parents1_other_adjusted_support_share
    button: |
      **Parents2 adjusted support share amount**:
      ${ parents1_other_adjusted_support_share }
  - Edit: parents2_other_adjusted_support_share
    button: |
      **Parents1 adjusted support share amount**:
      ${ parents2_other_adjusted_support_share }
  - Edit: parents1_income_support_percent
    button: |
      **Parents1 income support percent**:
      ${ parents1_income_support_percent }
  - Edit: parents2_income_support_percent
    button: |
      **Parents2 income support percent**:
      ${ parents2_income_support_percent }
  - Edit: parents2_other_limited_adjusted_amount
    button: |
      **Parents1 adjusted or greater amount**:
      ${ parents2_other_limited_adjusted_amount }
  - Edit: parents1_other_limited_adjusted_amount
    button: |
      **Parents2 adjusted or greater amount**:
      ${ parents1_other_limited_adjusted_amount }
  - Edit: recipient_payor
    button: |
      **Recipient payor**:
      ${ recipient_payor }
  - Edit: payors_adjusted_share_amount
    button: |
      **Payors adjusted share amount**:
      ${ payors_adjusted_share_amount }
  - Edit: mass_gov_yes
    button: |
      **Mass gov**:
      ${ mass_gov_yes }
  - Edit: recipients_support_income_percent
    button: |
      **Recipients support income percent**:
      ${ recipients_support_income_percent }
  - Edit: payors_disparity_adjusted_amount
    button: |
      **Payors disparity adjusted amount**:
      ${ payors_disparity_adjusted_amount }
  - Edit: payors_SS_credit_amount
    button: |
      **Payors ss credit amount**:
      ${ payors_SS_credit_amount }
  - Edit: payors_obligations_amount
    button: |
      **Payors obligations amount**:
      ${ payors_obligations_amount }
  - Edit: obligations_hardship_yes
    button: |
      **Obligations hardship**:
      ${ obligations_hardship_yes }
  - Edit: payors_support_income_percent_amount
    button: |
      **Payors support income percent amount**:
      ${ payors_support_income_percent_amount }
  - Edit: combined_additional_income_amount
    button: |
      **Combined additional income amount**:
      ${ combined_additional_income_amount }
  - Edit: parents1_additional_income_amount
    button: |
      **Parents1 additional income amount**:
      ${ parents1_additional_income_amount }
  - Edit: parents2_additional_income_amount
    button: |
      **Parents2 additional income amount**:
      ${ parents2_additional_income_amount }
  - Edit: docket_number
    button: |
      **docket_number**:
      ${ docket_number }
  - Edit: parents.revisit
    button: |
      **Parents**

      % for item in parents:
        * ${ item }
      % endfor
  - Edit: preparer[0]
    button: |
      **preparer[0]**:
      ${ preparer[0] }
---
continue button field: parents.revisit
question: |
  Edit parents
subquestion: |
  ${ parents.table }

  ${ parents.add_action() }
---
table: parents.table
rows: parents
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
id: download child_support_guidelines_worksheet
event: child_support_guidelines_worksheet_download
question: |
  All done
subquestion: |
  Thank you ${ preparer_name_full }. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_child_support_guidelines_worksheet'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
#Parent A, 3a
#sets parent 1 available income
depends on:
  - parents1_SS_dependency_amount
  - parents1_gross_amount
  - parents1_other_obligations_amount
  - parents1_health_care_amount
  - parents1_dental_vision_amount
code: |
  if parents1_gross_amount + parents1_SS_dependency_amount - parents1_other_obligations_amount - parents1_health_care_amount - parents1_dental_vision_amount <= 0:
    parents1_available_income_amount = 0
  else:
    parents1_available_income_amount = parents1_gross_amount + parents1_SS_dependency_amount - parents1_other_obligations_amount - parents1_health_care_amount - parents1_dental_vision_amount
  calculate_parents1_available_income_amount = True
---
#Parent B, 3a
#sets parent2 available income
depends on:
  - parents2_SS_dependency_amount
  - parents2_gross_amount
  - parents2_other_obligations_amount
  - parents2_health_care_amount
  - parents2_dental_vision_amount
code: |
  if parents2_gross_amount + parents2_SS_dependency_amount - parents2_other_obligations_amount - parents2_health_care_amount - parents2_dental_vision_amount <= 0:
    parents2_available_income_amount = 0
  else:
    parents2_available_income_amount = parents2_gross_amount + parents2_SS_dependency_amount - parents2_other_obligations_amount - parents2_health_care_amount - parents2_dental_vision_amount
  calculate_parents2_available_income_amount = True
---
#combined_available_income_amount, 3b
#calculates combined_available_income_amount
depends on:
  - parents1_available_income_amount
  - parents2_available_income_amount
code : |
  combined_available_income_amount = parents1_available_income_amount + parents2_available_income_amount
  calculate_combined_available_income_amount = True
---
#Parent A, 3c
#gets parent 1 income share percentage
depends on:
  - parents1_available_income_amount
  - combined_available_income_amount
code: |
  parents1_income_share_percent = parents1_available_income_amount / combined_available_income_amount
  # the sheet asks to round to nearest percent. should we be rounding the result to the nearest 0.XX,   not sure effect on math with the reamining points?
  calculate_parents1_income_share_percent = True
---
#Parent B, 3c
#gets parent 2 income share percentage
depends on: 
  - parents2_available_income_amount
  - combined_available_income_amount
code: |
  parents2_income_share_percent = parents2_available_income_amount / combined_available_income_amount
  calculate_parents2_income_share_percent = True
---
# sets applicable_income_amount, 3d
# calculates applicable_income_amount
depends on: 
  - combined_available_income_amount
code: |
 if combined_available_income_amount < 7692: 
   applicable_income_amount = combined_available_income_amount
 else:
   applicable_income_amount = 7692
 calculate_applicable_income_amount = True 
---
#sets one_child_amount, 3e
#gets the one child support amount
depends on:
  - applicable_income_amount
code: |
  if round(applicable_income_amount) <= 210:
    one_child_support_amount = 12
  elif round(applicable_income_amount) <= 249:
    one_child_support_amount = 12 + ((applicable_income_amount - 210) * .2)
  elif round(applicable_income_amount) <= 750:
    one_child_support_amount = 12 + (applicable_income_amount * .22)
  elif round(applicable_income_amount) <= 1400:
    one_child_support_amount = 165 + ((applicable_income_amount - 750) * .21)
  elif round(applicable_income_amount) <= 2200:
    one_child_support_amount = 302 + ((applicable_income_amount - 1400) * .19)
  elif round(applicable_income_amount) <= 3500:
    one_child_support_amount = 454 + ((applicable_income_amount - 2200) * .14)
  elif round(applicable_income_amount) <= 5000:
    one_child_support_amount = 636 + ((applicable_income_amount - 3500) * .11)
  # hard coded max applicable_income_amount is 7692. else is that max. 
  else:
    one_child_support_amount = 801 + ((applicable_income_amount - 5000) * .1)    
  calculate_one_child_support_amount = True
---
#sets parents2_child_number_adjustments, 3f, Parent B
#finds parents2_child_number_adjustments value
depends on:
  - parents2_total_children_number
code: |
  if parents2_total_children_number < 1:
    parents2_child_number_adjustments = 1
  elif parents2_total_children_number == 1:
    parents2_child_number_adjustments = 1  
  elif parents2_total_children_number == 2:
    parents2_child_number_adjustments = 1.4
  elif parents2_total_children_number == 3:
    parents2_child_number_adjustments = 1.68
  elif parents2_total_children_number == 4:
    parents2_child_number_adjustments = 1.85      
  #The PDF is limited to 5 children. The else here assumes 5 children for the order. 
  else:
    parents2_child_number_adjustments = 1.94
  calculate_parents2_child_number_adjustments = True
---
#sets parents2_child_number_adjustments, 3f, Parent A
#finds parents1_child_number_adjustments value
depends on:
  - parents1_total_children_number 
code: | 
  if parents1_total_children_number < 1:
    parents1_child_number_adjustments = 1
  elif parents1_total_children_number == 1:
    parents1_child_number_adjustments = 1
  elif parents1_total_children_number == 2:
    parents1_child_number_adjustments = 1.4
  elif parents1_total_children_number == 3:
    parents1_child_number_adjustments = 1.68
  elif parents1_total_children_number == 4:
    parents1_child_number_adjustments = 1.85
  #The PDF is limited to 5 children. The else here assumes 5 children for the order. 
  else:
    parents1_child_number_adjustments = 1.94    
  calculate_parents1_child_number_adjustments = True
---
# sets parents1_children_adjustments, 4a, Parent A
# based on table c on worksheet (adjustments for children >18 years old)
depends on:
  - parents1_under_18_number
  - parents1_total_children_number
code: |
  if parents1_under_18_number == 0:    
    parents1_children_adjustments = .25
  elif parents1_under_18_number == 1:
    if parents1_total_children_number - parents1_under_18_number == 1: 
      parents1_children_adjustments = .07
    elif parents1_total_children_number - parents1_under_18_number == 2:
      parents1_children_adjustments = .11
    elif parents1_total_children_number - parents1_under_18_number == 3:
      parents1_children_adjustments = .13   
    elif parents1_total_children_number - parents1_under_18_number == 4:
      parents1_children_adjustments = .14  
    else:
      parents1_children_adjustments = 0  
  elif parents1_under_18_number == 2:
    if parents1_total_children_number - parents1_under_18_number == 1:
      parents1_children_adjustments = .04
    elif parents1_total_children_number - parents1_under_18_number == 2:
      parents1_children_adjustments = .06   
    elif parents1_total_children_number - parents1_under_18_number == 3:
      parents1_children_adjustments = .07
    else:
      parents1_children_adjustments = 0
  elif parents1_under_18_number == 3:
    if parents1_total_children_number - parents1_under_18_number == 1:
      parents1_children_adjustments = .02  
    elif parents1_total_children_number - parents1_under_18_number == 2:
      parents1_children_adjustments = .03
    else:
      parents1_children_adjustments = 0
  elif parents1_under_18_number == 4:
    if parents1_total_children_number - parents1_under_18_number == 1:
      parents1_children_adjustments = .01
    else:       
      parents1_children_adjustments = 0 
  else:
    #The PDF is limited to 5 children. The else here assumes 5 children under 18 for the order. 
    parents1_children_adjustments = 0
  calculate_parents1_children_adjustments = True
---
# assigns parents2_children_adjustments - 4a, Parent B
# based on table c on worksheet
depends on:
  - parents2_under_18_number
  - parents2_total_children_number
code: |
  if parents2_under_18_number == 0:    
    if parents2_total_children_number - parents2_under_18_number >= 1:
      parents2_children_adjustments = .25
    else:
      parents2_children_adjustments = 0
  elif parents2_under_18_number == 1:
    if parents2_total_children_number - parents2_under_18_number == 1: 
      parents2_children_adjustments = .07
    elif parents2_total_children_number - parents2_under_18_number == 2:
      parents2_children_adjustments = .11
    elif parents2_total_children_number - parents2_under_18_number == 3:
      parents2_children_adjustments = .13   
    elif parents2_total_children_number - parents2_under_18_number == 4:
      parents2_children_adjustments = .14  
    else:
      parents2_children_adjustments = 0  
  elif parents2_under_18_number == 2:
    if parents2_total_children_number - parents2_under_18_number == 1:
      parents2_children_adjustments = .04
    elif parents2_total_children_number - parents2_under_18_number == 2:
      parents2_children_adjustments = .06   
    elif parents2_total_children_number - parents2_under_18_number == 3:
      parents2_children_adjustments = .07
    else:
      parents2_children_adjustments = 0
  elif parents2_under_18_number == 3:
    if parents2_total_children_number - parents2_under_18_number == 1:
      parents2_children_adjustments = .02  
    elif parents2_total_children_number - parents2_under_18_number == 2:
      parents2_children_adjustments = .03
    else:
      parents2_children_adjustments = 0
  elif parents2_under_18_number == 4:
    if parents2_total_children_number - parents2_under_18_number == 1:
      parents2_children_adjustments = .01
    else:       
      parents2_children_adjustments = 0 
  else:
    #The PDF is limited to 5 children. The else here assumes 5 children under 18 for the order. 
    parents2_children_adjustments = 0
  calculate_parents2_children_adjustments = True
---
# setting parents1_share_support_amount - 5a, Parent A
depends on:
  - parents1_income_share_percent
  - parents1_adjusted_support_amount
code: |
  parents1_share_support_amount = (parents1_income_share_percent * (parents1_support_amount - parents1_over_18_adjustments_amount))
  set_parents1_share_support_percent = True
---
#setting parents2_share_support_amount - 5a, Parent B
#rules from MLRI Guidlines have parents2_share_support_amount blank if two-thirds true. Set to 1 here and will be displayed as DAEmpty() on form. Potential problems in future. 
depends on: 
 - parents2_income_share_percent
 - parents2_adjusted_support_amount
 - parenting_arrangement
code: |
 if parenting_arrangement == "two-thirds":
   parents2_share_support_amount = 1
 else:
   parents2_share_support_amount = round(parents2_adjusted_support_amount * parents2_income_share_percent)
 set_parents2_share_support_amount = True
---
#setting parents1_other_share_support, 5b, Parent A
depends on:
  - parents1_share_support_amount
  - parents1_over_18_adjustments_amount
code: |
  parents1_other_share_support = (parents1_support_amount - parents1_over_18_adjustments_amount) - parents1_share_support_amount 
  set_parents1_other_share_support = True
---
#setting parents2_other_share_support, 5b, Parent B
#rules from MLRI Guidlines have parents2_share_support_amount blank if two-thirds true. Set to 1 here and will be displayed as DAEmpty() on form. Potential problems in future.
depends on:
 - parents2_share_support_amount
 - parents2_adjusted_support_amount
code: |
  if parenting_arrangement == 'two-thirds':
    parents2_other_share_support = 1
  else:
    parents2_other_share_support = parents2_share_support_amount - parents2_adjusted_support_amount
  set_parents2_other_share_support = True
---
#setting parents1_other_low_income_adjusted, 5c, Parent A
#Logic and math are coming from shaded area of table A, not Child Support Guidlines Chart.
depends on:
  - parenting_arrangement
  - parents2_available_income_amount
  - parents1_other_share_support
code: |
  if parenting_arrangement == "two-thirds":
    if parents2_available_income_amount > 249:
      parents1_other_low_income_adjusted = parents1_other_share_support
    else:
      if parents2_available_income_amount <= 249:
        if parents2_available_income_amount <= 212:
          parents1_other_low_income_adjusted = 12
        elif parents2_available_income_amount == 213:
          parents1_other_low_income_adjusted = 13
        elif parents2_available_income_amount <= 218:
          parents1_other_low_income_adjusted = 14
        elif parents2_available_income_amount <= 223:
          parents1_other_low_income_adjusted = 15
        elif parents2_available_income_amount <= 228:
          parents1_other_low_income_adjusted = 16
        elif parents2_available_income_amount <= 233:
          parents1_other_low_income_adjusted = 17
        elif parents2_available_income_amount <= 238:
          parents1_other_low_income_adjusted = 18
        elif parents2_available_income_amount <= 243:
          parents1_other_low_income_adjusted = 19
        elif parents2_available_income_amount <= 249:
          parents1_other_low_income_adjusted = 20
  else:
    parents1_other_low_income_adjusted = parents1_other_share_support
  calculate_parents1_other_low_income_adjusted = True
---
#sets parents2_other_low_income_adjusted, 5c, Parent B
#Logic and math are coming from shaded area of table A, not Child Support Guidlines Chart.
depends on: 
  - parenting_arrangement
  - parents2_other_share_support
  - parents1_available_income_amount
code: |    
  if parenting_arrangement == "two-thirds":
    parents2_other_low_income_adjusted = 0     
  else:
    if parents1_available_income_amount > 249:
      parents2_other_low_income_adjusted = parents2_other_share_support
    elif parents1_available_income_amount <= 249:
      if parents1_available_income_amount <= 212:
        parents2_other_low_income_adjusted = 12
      elif parents1_available_income_amount == 213:
        parents2_other_low_income_adjusted = 13
      elif parents1_available_income_amount <= 218:
        parents2_other_low_income_adjusted = 14
      elif parents1_available_income_amount <= 223:
        parents2_other_low_income_adjusted = 15
      elif parents1_available_income_amount <= 228:
        parents2_other_low_income_adjusted = 16
      elif parents1_available_income_amount <= 233:
        parents2_other_low_income_adjusted = 17
      elif parents1_available_income_amount <= 238:
        parents2_other_low_income_adjusted = 18
      elif parents1_available_income_amount <= 243:
        parents2_other_low_income_adjusted = 19
      elif parents1_available_income_amount <= 249:
        parents2_other_low_income_adjusted = 20
  calculate_parents2_other_low_income_adjusted = True
---
#each item in the list is a tupple of (amount for parent 1, total of both parents)
depends on:
  - parents1_total_children_number
  - parents1_children_amounts
  - child1_total_amount
  - child2_total_amount
  - child3_total_amount
  - child4_total_amount
  - child5_total_amount
  - parents1_child1_amount
  - parents1_child2_amount
  - parents1_child3_amount
  - parents1_child4_amount
  - parents1_child5_amount 
code: |
  parents1_children_amounts = [
    (parents1_child1_amount, child1_total_amount),
    (parents1_child2_amount, child2_total_amount),
    (parents1_child3_amount, child3_total_amount),
    (parents1_child4_amount, child4_total_amount),
    (parents1_child5_amount, child5_total_amount)
  ]
  get_parents1_children_amounts = True
---
#each item in the list is a tupple of (amount for parent 2, total of both parents)
depends on:
  - parents2_total_children_number
  - parents2_children_amounts
  - child1_total_amount
  - child2_total_amount
  - child3_total_amount
  - child4_total_amount
  - child5_total_amount
  - parents2_child1_amount
  - parents2_child2_amount
  - parents2_child3_amount
  - parents2_child4_amount
  - parents2_child5_amount 
code: |
  parents2_children_amounts = [
    (parents2_child1_amount, child1_total_amount),
    (parents2_child2_amount, child2_total_amount),
    (parents2_child3_amount, child3_total_amount),
    (parents2_child4_amount, child4_total_amount),
    (parents2_child5_amount, child5_total_amount)
  ]
  get_parents2_children_amounts = True
---
# sets parents1_benchmark_amount, 6a, Parent A
# all the depends on values are definitley defined elsewhere 
depends on:
  - parents1_total_children_number
  - parents1_children_amounts
  - child1_total_amount
  - child2_total_amount
  - child3_total_amount
  - child4_total_amount
  - child5_total_amount
  - parents1_child1_amount
  - parents1_child2_amount
  - parents1_child3_amount
  - parents1_child4_amount
  - parents1_child5_amount 
code: |  
  children_amounts = []
  for child_index in range(len(parents1_children_amounts)):
    #get the tupple of the two values for this child.
    child_amounts = parents1_children_amounts[child_index]
    both_parents_child_total = child_amounts[1]
    if both_parents_child_total <= 355:
      child_benchmark_amount = child_amounts[0]
    else:
      child_benchmark_amount = child_amounts[0] * (355 / both_parents_child_total)
    children_amounts.append(child_benchmark_amount)
  
  parents1_benchmark_amount = sum(children_amounts)
---
# sets parents2_benchmark_amount, 6a, Parent B
# all the depends on values are definitley defined elsewhere 
depends on:
  - parents2_total_children_number
  - parents2_children_amounts
  - child1_total_amount
  - child2_total_amount
  - child3_total_amount
  - child4_total_amount
  - child5_total_amount
  - parents2_child1_amount
  - parents2_child2_amount
  - parents2_child3_amount
  - parents2_child4_amount
  - parents2_child5_amount 
code: |  
  children_amounts = []
  for child_index in range(len(parents2_children_amounts)):
    #get the tupple of the two values for this child.
    child_amounts = parents2_children_amounts[child_index]
    both_parents_child_total = child_amounts[1]
    if both_parents_child_total <= 355:
      child_benchmark_amount = child_amounts[0]
    else:
      child_benchmark_amount = child_amounts[0] * (355 / both_parents_child_total)
    children_amounts.append(child_benchmark_amount)
  
  parents2_benchmark_amount = sum(children_amounts)
---
#sets parents1_income_support_percent, 6d, Parent A
#math from MLRI Guidlines
#two_thirds_yes == True wants to have N/A display
depends on:
  - parents1_available_income_amount
  - parents1_other_adjusted_support_share
code: |
  if parents1_available_income_amount == 0:
    parents1_income_support_percent = .1
  else:
    parents1_income_support_percent = parents1_other_adjusted_support_share / parents1_available_income_amount
  set_parents1_income_support_percent = True
---
#sets parents2_income_support_percent, 6d, Parent B
#math from MLRI Guidlines
#two_thirds_yes == True wants to have N/A display - used in attachment block
depends on:
  - parents2_available_income
  - parents2_other_adjusted_support_share
code: |
  if parents2_available_income_amount == 0:
    parents2_income_support_percent = .1
  else:
    parents2_income_support_percent = parents2_other_adjusted_support_share / parents2_available_income_amount
  set_parents2_income_support_percent = True
---
#sets parents1_other_limited_adjusted_amount, 6e, Parent A
#math from worksheet line
depends on:
  - parents1_income_support_percent
  - parents2_income_share_percent
  - parents1_other_adjusted_support_share
code: |
  if parents1_income_support_percent == 0:
    parents1_other_limited_adjusted_amount = parents1_other_adjusted_support_share    
  elif parents1_income_support_percent >= 10:
  #CAN I DO A ELIF (VARIABLE) IS IN SOME RANGE? IE. 2-10
    parents1_other_limited_adjusted_amount = parents1_other_adjusted_support_share
  else:
    if parents1_other_adjusted_support_share <= ((parents1_income_support_percent + (parents1_income_support_percent * .1)) * parents2_available_income_amount):
      parents1_other_limited_adjusted_amount = parents1_other_adjusted_support_share
    else:
      parents1_other_limited_adjusted_amount = ((parents1_income_support_percent + (parents1_income_support_percent * .1)) * parents2_available_income_amount)
  calculate_parents1_other_limited_adjusted_amount = True  
---
#sets parents2_other_limited_adjusted_amount, 6e, Parent B
#math from worksheet line
#will require validation that numbers do not go below shaded guidlines area'
depends on:
  - parents2_income_support_percent
  - parents2_other_adjusted_support_share
  - parents1_available_income_amount
code: |
  if parents2_income_support_percent == 0:
    parents2_other_limited_adjusted_amount = parents2_other_adjusted_support_share    
  elif parents2_income_support_percent >= 10:
  #CAN I DO A ELIF (VARIABLE) IS IN SOME RANGE? IE. 2-10
    parents2_other_limited_adjusted_amount = parents2_other_adjusted_support_share
  else:
    if parents2_other_adjusted_support_share <= ((parents2_income_support_percent + (parents2_income_support_percent * .1)) * parents1_available_income_amount):
      parents2_other_limited_adjusted_amount = parents2_other_adjusted_support_share
    else:
      parents2_other_limited_adjusted_amount = ((parents2_income_support_percent + (parents2_income_support_percent * .1)) * parents1_available_income_amount)
  calculate_parents2_other_limited_adjusted_amount = True  
---
#this code defines both Payor and Recipient statuses
#will refrence only recipient_payor variable for logic about payor's owed amounts
#if recipient_payor == 'Recipient' (assumes P1 recipient) else: (assumes P2 recipient)
depends on:
  - parenting_arrangement
  - parents2_other_limited_adjusted_amount
  - parents1_other_limited_adjusted_amount
code: |
  if parenting_arrangement == "two-thirds":
    # parent1 is recipient values and parent2 is payor values
    recipient_payor = "Recipient"
    payor_recipient = "Payor"
  else:
    if parents2_other_limited_adjusted_amount < parents1_other_limited_adjusted_amount:
      # parent1 is recipient values and parent2 is payor values
      recipient_payor = "Recipient"
      payor_recipient = "Payor"
    else:
      # parent2 is recipient values and parent1 is payor values
      recipient_payor = "Payor"
      payor_recipient = "Recipient"
  set_recipient_payor_statuses = True
---
#sets recipients_support_income_percent, 7a
#math from worksheet
depends on:
 - parenting_arrangement
 - payors_adjusted_share_amount
 - parents1_available_income_amount
code: |
  if parenting_arrangement == 'two-thirds':
    if parents1_available_income_amount == 0:
      recipients_support_income_percent = "N/A"
    else:
      recipients_support_income_percent = payors_adjusted_share_amount / parents1_available_income_amount
  else:
    recipients_support_income_percent = 'N/A'
  set_recipients_support_income_percent = True
---
#sets payors_disparity_adjusted_amount, 7b
#math from worksheet
#If 7a is ≥ 10% or is N/A, enter 6g
#If 7a is < 10%, enter 6e, 6g, or ((7a + 10%) x Payor 3a), whichever is less,
#but not less than an amount from the shaded area of the Guidelines Chart
depends on:
  - 7a
  - 6e
  - 6g
  - payor 3a
code: |
  if recipients_support_income_percent == 'N/A':
    payors_disparity_adjusted_amount = payors_adjusted_share_amount  
  elif recipients_support_income_percent >= .1:
    payors_disparity_adjusted_amount = payors_adjusted_share_amount  
  elif recipients_support_income_percent < .1:
    if parenting_arrangement == 'two-thirds':
      #parents1 recipient and parents2 payor
      payors_disparity_adjusted_amount = payors_adjusted_share_amount
    else:
      #parents2 recipient and parents2 payor
      payors_disparity_adjusted_amount = payors_adjusted_share_amount  
  set_payors_disparity_adjusted_amount = True
---
#sets payors_SS_credit_amount, 7c
depends on:
  - recipient_payor
  - parents1_SS_dependency_recievied_amount
  - parents2_SS_dependency_recievied_amount
code: |
  if recipient_payor == 'Recipient':
    payors_SS_credit_amount = parents1_SS_dependency_recievied_amount
  else:
    payors_SS_credit_amount = parents2_SS_dependency_recievied_amount
  set_payors_SS_credit_amount = True 
---
#sets payors_obligations_amount, 7d
depends on:
  - payors_SS_credit_amount
  - payors_disparity_adjusted_amount
code: |
  payors_obligations_amount = 250
  set_payors_obligations_amount = True
---
# sets payors_support_income_percent_amount, 7e
depends on:
  - recipient_payor
  - parents1_available_income_amount
  - parents2_available_income_amount
  - payors_obligations_amount
code: |
  if recipient_payor == "Recipient":
    #parent1 are recipient values and parent2 is payor values
    if parents1_available_income_amount == 0:
      payors_support_income_percent_amount = 1
    else:
      payors_support_income_percent_amount = payors_obligations_amount / parents1_available_income_amount
  else:
    #parent2 are recipient values and parent1 is payor values
    if parents2_available_income_amount == 0:
      payors_support_income_percent_amount = 1
    else:
      payors_support_income_percent_amount = payors_obligations_amount / parents2_available_income_amount
  set_payors_support_income_percent_amount = True
---
#sets obligations_hardship_yes, checkbox at 7e
depends on:
  - payors_support_income_percent_amount
code: |
  if payors_support_income_percent_amount >= .4:
    obligations_hardship_yes = True
  else:
    obligations_hardship_yes = False
---
#sets combined_additional_income_amount, 8a
depends on:
  - combined_available_income_amount
code: |
  if combined_available_income_amount - 7692 > 0:
    combined_additional_income_amount = combined_available_income_amount - 7692
  else:
    combined_additional_income_amount = 0
  set_combined_additional_income_amount = True
---
code: |
  signature_fields = []
  parents1_total_children_number = parents1_over_18_number + parents1_under_18_number
  parents2_total_children_number = parents2_over_18_number + parents2_under_18_number
  parents1_all_children_amount = parents1_child1_amount + parents1_child2_amount + parents1_child3_amount + parents1_child4_amount + parents1_child5_amount
  parents2_all_children_amount = parents2_child1_amount + parents2_child2_amount + parents2_child3_amount + parents2_child4_amount + parents2_child5_amount
  child2_total_amount = parents1_child1_amount + parents2_child2_amount
  child3_total_amount = parents1_child3_amount + parents2_child3_amount
  child4_total_amount = parents1_child4_amount + parents2_child4_amount
  child5_total_amount = parents1_child5_amount + parents2_child5_amount
  child1_total_amount = parents1_child1_amount + parents2_child1_amount
  parents2_support_amount = one_child_support_amount * parents2_child_number_adjustments
  parents1_support_amount = one_child_support_amount * parents1_child_number_adjustments
  parents1_over_18_adjustments_amount = parents1_support_amount * parents1_children_adjustments
  parents2_over_18_adjustments_amount = parents2_support_amount * parents2_children_adjustments
  parents1_adjusted_support_amount = parents1_support_amount - parents1_over_18_adjustments_amount
  parents2_adjusted_support_amount = DAEmpty()
  parents1_other_low_income_adjusted = DAEmpty()
  parents2_other_low_income_adjusted = DAEmpty()
  parents1_other_adjusted_support_share = (parents1_income_share_percent * parents2_benchmark_amount) + parents2_other_low_income_adjusted
  parents2_other_adjusted_support_share = (parents2_income_share_percent * parents1_benchmark_amount) + parents1_other_low_income_adjusted
  #payors_adjusted_share_amount has a temp number. Complicated logic to set value. 
  payors_adjusted_share_amount = 250
  parents1_additional_income_amount = DAEmpty()
  parents2_additional_income_amount = DAEmpty()
  parents1_other_benchmark_share_amount = DAEmpty()
  parents2_other_benchmark_share_amount = DAEmpty()
---
objects:
  - child_support_guidelines_worksheet_post_interview_instructions: ALDocument.using(title="Instructions", filename="child_support_guidelines_worksheet_next_steps.docx", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - child_support_guidelines_worksheet_attachment: ALDocument.using(title="Child Support Guidelines Worksheet", filename="child_support_guidelines_worksheet.pdf", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[child_support_guidelines_worksheet_post_interview_instructions,child_support_guidelines_worksheet_attachment], filename="child_support_guidelines_worksheet.pdf_package.pdf", title="All forms to download for your records", enabled=True)
  - al_recipient_bundle: ALDocumentBundle.using(elements=[child_support_guidelines_worksheet_attachment], filename="child_support_guidelines_worksheet.pdf_package.pdf", title="All forms to download for your records", enabled=True)
--- 
attachments:
  - name: child support guidelines worksheet post interview instructions
    filename: Post-interview-instructions     
    variable name: child_support_guidelines_worksheet_post_interview_instructions[i]        
    skip undefined: True
    docx template file: child_support_guidelines_worksheet_next_steps.docx
  - name: child support guidelines worksheet attachment
    filename: child_support_guidelines_worksheet.pdf     
    variable name: child_support_guidelines_worksheet_attachment[i]        
    skip undefined: True
    pdf template file: child_support_guidelines_worksheet.pdf
    fields:
      - "docket_number": ${ docket_number }
      - "docket_number__1": ${ docket_number }
      - "docket_number__2": ${ docket_number }
      - "docket_number__3": ${ docket_number }
      - "parents1_name_full": ${ parents1_name_full }
      - "parents1_name__1": ${ parents1_name_full }
      - "parents1_name__2": ${ parents1_name_full }
      - "parents1_name__3": ${ parents1_name_full }
      - "parents2_name_full": ${ parents2_name_full }
      - "parents2_name__1": ${ parents2_name_full }
      - "parents2_name__2": ${ parents2_name_full }
      - "parents2_name__3": ${ parents2_name_full }
      - "preparer_name_full": ${ preparer_name_full }
      - "case_name": ${ case_name }
      - "case_name__1": ${ case_name }
      - "case_name__2": ${ case_name }
      - "case_name__3": ${ case_name }
      - "prepared_date": ${ prepared_date }
      - "children_number": ${ "{:,.2f}".format(children_number) }
      - "shared_equal_yes": ${ shared_equal_yes }
      - "two_thirds_yes": ${ two_thirds_yes }
      - "split_children_yes": ${ split_children_yes }
      - "parents1_under_18_number": ${ "{:,.2f}".format(parents1_under_18_number) }
      - "parents2_under_18_number": ${ "{:,.2f}".format(parents2_under_18_number) }
      - "parents1_over_18_number": ${ "{:,.2f}".format(parents1_over_18_number) }
      - "parents2_over_18_number": ${ "{:,.2f}".format(parents2_over_18_number) }
      - "parents1_total_children_number": ${ parents1_over_18_number + parents1_under_18_number }
      - "parents2_total_children_number": ${ parents2_over_18_number + parents2_under_18_number }
      - "parents1_gross_amount": ${ currency(parents1_gross_amount) }
      - "parents2_gross_amount": ${ currency(parents2_gross_amount) }
      - "parents1_SS_dependency_amount": ${ currency(parents1_SS_dependency_amount) }
      - "parents2_SS_dependency_amount": ${ currency(parents2_SS_dependency_amount) }
      - "parents2_SS_dependency_recievied_amount": ${ currency(parents2_SS_dependency_recievied_amount) }
      - "parents1_SS_dependency_recievied_amount": ${ currency(parents1_SS_dependency_recievied_amount) }
      - "parents1_other_obligations_amount": ${ currency(parents1_other_obligations_amount) }
      - "parents2_other_obligations_amount": ${ currency(parents2_other_obligations_amount) }
      - "parents1_health_care_amount": ${ currency(parents1_health_care_amount) }
      - "parents2_health_care_amount": ${ currency(parents2_health_care_amount) }
      - "parents1_dental_vision_amount": ${ currency(parents1_dental_vision_amount) }
      - "parents2_dental_vision_amount": ${ currency(parents2_dental_vision_amount) }
      - "parents1_child2_amount": ${ currency(parents1_child2_amount) }
      - "parents1_child5_amount": ${ currency(parents1_child5_amount) }
      - "parents1_child1_amount": ${ currency(parents1_child1_amount) }
      - "parents1_child3_amount": ${ currency(parents1_child3_amount) }
      - "parents1_child4_amount": ${ currency(parents1_child4_amount) }
      - "parents1_all_children_amount": ${ currency(parents1_child1_amount + parents1_child2_amount + parents1_child3_amount + parents1_child4_amount + parents1_child5_amount) }
      - "parents2_all_children_amount": ${ currency(parents2_child1_amount + parents2_child2_amount + parents2_child3_amount + parents2_child4_amount + parents2_child5_amount) }
      - "parents2_child1_amount": ${ currency(parents2_child1_amount) }
      - "parents2_child2_amount": ${ currency(parents2_child2_amount) }
      - "parents2_child3_amount": ${ currency(parents2_child3_amount) }
      - "parents2_child4_amount": ${ currency(parents2_child4_amount) }
      - "parents2_child5_amount": ${ currency(parents2_child5_amount) }
      - "child2_total_amount": ${ currency(parents1_child2_amount + parents2_child2_amount) }
      - "child3_total_amount": ${ currency(parents1_child3_amount + parents2_child3_amount) }
      - "child4_total_amount": ${ currency(parents1_child4_amount + parents2_child4_amount) }
      - "child5_total_amount": ${ currency(parents1_child5_amount + parents2_child5_amount) }
      - "child1_total_amount": ${ currency(parents1_child1_amount + parents2_child1_amount) }
      - "parents2_available_income_amount": ${ currency(parents2_available_income_amount) }
      - "parents1_available_income_amount": ${ currency(parents1_available_income_amount) }     
      - "combined_available_income_amount": ${ currency(combined_available_income_amount) }
      - "parents2_income_share_percent": ${ round(parents2_income_share_percent * 100) } %
      - "parents1_income_share_percent": ${ round(parents1_income_share_percent * 100) } %
      - "applicable_income_amount": |
           % if combined_available_income_amount < 7692: 
           ${ currency(combined_available_income_amount) }
           % else:
           ${ currency(7692) }
           % endif
      - "one_child_support_amount": ${ currency(one_child_support_amount) }           
      - "parents2_child_number_adjustments": ${ parents2_child_number_adjustments }        
      - "parents1_child_number_adjustments": ${ parents1_child_number_adjustments }
      - "parents2_support_amount": ${ currency(one_child_support_amount * parents2_child_number_adjustments) }
      - "parents1_support_amount": ${ currency(one_child_support_amount * parents1_child_number_adjustments) }
      - "parents1_children_adjustments": ${ round(parents1_children_adjustments * 100) } %
      - "parents2_children_adjustments": ${ round(parents2_children_adjustments * 100) } %
      - "parents1_over_18_adjustments_amount": ${ currency(round(parents1_support_amount * parents1_children_adjustments)) }
      - "parents2_over_18_adjustments_amount": ${ currency(round(parents2_support_amount * parents2_children_adjustments)) }
      - "parents1_adjusted_support_amount": ${ currency(round(parents1_support_amount - parents1_over_18_adjustments_amount)) }
      - "parents2_adjusted_support_amount": ${ currency(round(parents2_support_amount - parents2_over_18_adjustments_amount)) }
      - "parents1_share_support_amount":  ${ currency(round(parents1_share_support_amount)) }
      - "parents2_share_support_amount": |
           % if parents2_share_support_amount == 1:
           N/A
           % else:
           ${ parents2_share_support_amount = parents2_share_support_amount } %
           % endif  
      - "parents1_other_share_support": ${ currency(round(parents1_other_share_support)) }
      - "parents2_other_share_support": |
           % if parents2_other_share_support == 1:
           N/A
           % else:
           ${ parents2_other_share_support = parents2_other_share_support } % 
           % endif    
      - "parents1_other_low_income_adjusted": ${ currency(round(parents1_other_low_income_adjusted)) }
      - "parents2_other_low_income_adjusted": ${ currency(round(parents2_other_low_income_adjusted)) }
      - "parents2_benchmark_amount": ${ currency(round(parents2_benchmark_amount)) }
      - "parents1_benchmark_amount": ${ currency(round(parents1_benchmark_amount)) }
      - "parents1_other_benchmark_share_amount": ${ currency(round(parents2_income_share_percent * parents1_benchmark_amount)) } 
      - "parents2_other_benchmark_share_amount": ${ currency(round(parents1_income_share_percent * parents2_benchmark_amount)) }
      - "parents1_other_adjusted_support_share": ${ currency(round((parents2_income_share_percent * parents1_benchmark_amount) + parents1_other_low_income_adjusted)) } 
      - "parents2_other_adjusted_support_share": ${ currency(round((parents1_income_share_percent * parents2_benchmark_amount) + parents2_other_low_income_adjusted)) } 
      - "parents1_income_support_percent": |
          % if two_thirds_yes == True:
          N/A
          % else:
          ${ round(parents1_income_support_percent * 100) } %
          % endif
      - "parents2_income_support_percent": |
          % if two_thirds_yes == True:
          N/A
          % else:
          ${ round(parents2_income_support_percent * 100) } %
          % endif
      - "parents2_other_limited_adjusted_amount": ${ currency(round(parents2_other_limited_adjusted_amount)) }  
      - "parents1_other_limited_adjusted_amount": ${ currency(round(parents1_other_limited_adjusted_amount)) }
      - "recipient_payor": ${ recipient_payor } 
      - "payor_recipient": ${ payor_recipient }
      - "payors_adjusted_share_amount": ${ currency(payors_adjusted_share_amount) } 
      - "mass_gov_yes": ${ mass_gov_yes }
      - "recipients_support_income_percent": ${ round(recipients_support_income_percent * 100) } %
      - "payors_disparity_adjusted_amount": ${ currency(round(payors_disparity_adjusted_amount)) }
      - "payors_SS_credit_amount": ${ currency(payors_SS_credit_amount) }
      - "payors_obligations_amount": ${ currency(payors_obligations_amount) }        
      - "obligations_hardship_yes": ${ obligations_hardship_yes }
      - "payors_support_income_percent_amount": ${ round(payors_support_income_percent_amount * 100) } %
      - "combined_additional_income_amount": ${ currency(combined_additional_income_amount) }
      - "parents1_additional_income_amount": ${ combined_additional_income_amount * round(parents1_available_income_amount / combined_available_income_amount) } %
      - "parents2_additional_income_amount": ${ combined_additional_income_amount * round(parents2_available_income_amount / combined_available_income_amount) } %